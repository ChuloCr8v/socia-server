// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BankInformation {
  id            String @id @default(uuid()) @db.Uuid
  bankName      String
  accountName   String
  accountNumber String
  vendor        Vendor @relation(fields: [vendorId], references: [id])
  vendorId      String @db.Uuid()

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Auth {
  passHash String
  user     User   @relation(fields: [userId], references: [id])
  userId   String @id @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum OtpTypes {
  EMAIL_VERIFICATION
}

model Otp {
  id        String   @id @default(uuid()) @db.Uuid
  otp       String
  expiresAt DateTime
  type      OtpTypes
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid()

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model User {
  id    String @id @default(uuid()) @db.Uuid
  email String @unique
  name  String

  auth Auth?
  otps Otp[]

  vendor     Vendor?
  isVerified Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Vendor {
  id             String            @id @default(uuid()) @db.Uuid
  name           String?
  businessName   String
  address        String?
  phone          String            @unique
  cac            String?
  logoUrl        String?
  headerImageUrl String?
  banks          BankInformation[]
  openingTime    String?
  closingTime    String?
  user           User?             @relation(fields: [userId], references: [id])
  userId         String            @unique() @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
